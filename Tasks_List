Потрібно налаштувати локальну інфраструктуру за допомогою docker-compose, яка включає декілька сервісів для розгортання РНР-застосунку, бази даних, моніторингу та тестування
навантаження.


Завдання:
1. Docker Compose: Написати docker-compose . yml файл для підняття групи контейнерів:
- nginx: вебсервер для роботи РНР-застосунку.
- php: контейнер з РНР, пов'язаний з nginx. mariadb: база даних для взаємодії з РНР-застосунком.

2. РНР-застосунок:
• Написати index.php, який: Відображає результат виконання функції phpinfo(). Перевіряє зʼєднання з mariadb та показує, чи доступна база даних.

Додано дві процедури:
    - створення  таблиці 'SampleTable' -> запис даних у неї
    - читання запису з таблиці бази даних

3. Моніторинг:
Додати контейнер з Grafana, який відображає кількість активних запитів до index. php у режимі реального часу.
Використати Prometheus або вбудований експортер Grafana для збору метрик.

4. Навантажувальне тестування:
• Додати контейнер з інструментом для навантажувального тестування (наприклад, locust або hey), щоб протестувати роботу всієї системи та перевірити, як вона витримує навантаження.
Відкрите питання

У скрі



---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Питання
Які додаткові метрики ви обрали б для моніторингу цієї інфраструктури і чому? Опишіть, які показники ви вважаєте критичними для аналізу продуктивності цієї системи, та як вони можуть
впливати на роботу застосунку.

Я б розбив ці матрики на три основних типи
    1. Hardware
    2. Software
    3. Networking
    
1. Hardware

    - Завантаженість процесора:
        Якщо завантаженість перевищує 80%, це може означати, що сервери не справляються з обробкою запитів.
        
    - Використання оперативної пам'яті: 
        Високе використання пам'яті (> 90%) може призвести до "OOM Killer" (Out of Memory Killer), що зупинить критичні процеси.
        
    - Завантаження диска :
        Вільне місце має залишатися не менше 20% для запобігання збоїв під час запису даних.
        
    - Кількість хідних та вихідних операцій - IOPS:
        Високий показник IOPS може свідчити про те, що система зберігання є вузьким місцем.

2. Software (спільні параметри)

    MariaDB / NGINX:

    - Кількість одночасних підключень / Кількість активних підключень:
        Перевищення максимального значення може призвести до відмови нових підключень
        
    - Час відповіді на запити :
        Високий час відповіді вказує на проблеми з продуктивністю або перевантаження
        
    - Кількість запитів за секунду:
        Показник навантаження на компоненту. Високе значення може свідчити про потребу в оптимізації запитів або розширенні ресурсів.
        
    - Кількість помилок (Error Rate):
        Важливо відслідковувати, щоб кількість помилок не збільшувалася, оскільки це може свідчити про проблеми з запитами чи некоректну роботу додатку.
      
3. Networking 

    - Пропускна здатність :
        Відображає швидкість передачі даних через мережу. Якщо пропускна здатність наближається до межі, це може викликати затримки.
            
    - Кількість вхідних/вихідних пакетів (Packet Rate):        
        Важливо для моніторингу DDoS-атак, коли значно зростає кількість пакетів, що може перевантажити сервер
        
    - Відсоток втрачених пакетів :        
        Показує наявність проблем з мережею, таких як низька якість з'єднання або перевантаження.
            
    - Затримка:
        Вимірювання затримок у мережевих з'єднаннях для оцінки швидкості обробки запитів.  
    


